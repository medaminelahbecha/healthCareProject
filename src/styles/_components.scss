// Component Styles

// Buttons
.btn {
  display: inline-flex; // Use inline-flex for alignment of icon and text if needed
  align-items: center;
  justify-content: center;
  padding: map-get($spacing-scale, 2) map-get($spacing-scale, 4); // p-2 p-4 equivalent
  font-size: map-get($font-sizes, "base");
  font-weight: 500;
  text-align: center;
  text-decoration: none;
  border-radius: map-get($radius-scale, "md");
  cursor: pointer;
  transition: background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
  user-select: none; // Prevent text selection on click
  border: 1px solid transparent; // Base border for all buttons

  // Primary Button
  &--primary {
    background-color: var(--cc-primary);
    color: var(--cc-neutral-100);
    border-color: var(--cc-primary);

    &:hover {
      background-color: var(--cc-primary-hover);
      border-color: var(--cc-primary-hover);
    }

    &:active {
      background-color: darken(var(--cc-primary-hover), 5%); // Slightly darker on active
      border-color: darken(var(--cc-primary-hover), 5%);
    }

    &:disabled,
    &[disabled] {
      background-color: lighten(var(--cc-primary), 20%);
      border-color: lighten(var(--cc-primary), 20%);
      color: var(--cc-neutral-100);
      cursor: not-allowed;
      opacity: 0.65; // Standard disabled opacity
    }
  }

  // Secondary Button (example: grey button)
  &--secondary {
    background-color: lighten(var(--cc-neutral-900), 70%); // A light grey
    color: var(--cc-neutral-900);
    border-color: lighten(var(--cc-neutral-900), 70%);

    &:hover {
      background-color: lighten(var(--cc-neutral-900), 60%);
      border-color: lighten(var(--cc-neutral-900), 60%);
    }

    &:active {
      background-color: lighten(var(--cc-neutral-900), 50%);
      border-color: lighten(var(--cc-neutral-900), 50%);
    }

     &:disabled,
    &[disabled] {
      background-color: lighten(var(--cc-neutral-900), 80%);
      border-color: lighten(var(--cc-neutral-900), 80%);
      color: lighten(var(--cc-neutral-900), 40%);
      cursor: not-allowed;
      opacity: 0.65;
    }
  }

  // Outline Button
  &--outline {
    background-color: transparent;
    color: var(--cc-primary);
    border-color: var(--cc-primary);

    &:hover {
      background-color: var(--cc-primary);
      color: var(--cc-neutral-100);
    }

    &:active {
      background-color: var(--cc-primary-hover);
      border-color: var(--cc-primary-hover);
      color: var(--cc-neutral-100);
    }

    &:disabled,
    &[disabled] {
      color: lighten(var(--cc-primary), 20%);
      border-color: lighten(var(--cc-primary), 20%);
      background-color: transparent;
      cursor: not-allowed;
      opacity: 0.65;
    }
  }

  // Full-width block button
  &--block {
    display: block;
    width: 100%;
  }
}

// Forms
.label {
  display: block;
  font-size: map-get($font-sizes, "sm");
  font-weight: 500;
  margin-bottom: map-get($spacing-scale, 1); // mb-1
  color: var(--cc-neutral-900);
}

.input {
  display: block;
  width: 100%;
  padding: map-get($spacing-scale, 2) map-get($spacing-scale, 3); // p-2 p-3
  font-size: map-get($font-sizes, "base");
  line-height: 1.5;
  color: var(--cc-neutral-900);
  background-color: var(--cc-neutral-100);
  background-clip: padding-box;
  border: 1px solid lighten(var(--cc-neutral-900), 70%); // Light grey border
  border-radius: map-get($radius-scale, "sm");
  transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;

  &:focus {
    border-color: var(--cc-primary);
    outline: 0;
    box-shadow: 0 0 0 0.2rem rgba(var(--cc-primary), 0.25); // Focus ring like Bootstrap
  }

  // Placeholder styling
  &::placeholder {
    color: lighten(var(--cc-neutral-900), 50%);
    opacity: 1; // Firefox fixes
  }

  // Disabled state
  &:disabled,
  &[readonly] { // Treat readonly same as disabled for styling
    background-color: lighten(var(--cc-neutral-900), 85%); // Lighter grey
    opacity: 0.7;
    cursor: not-allowed;
  }

  // Error state
  &--error {
    border-color: var(--cc-error);

    &:focus {
      border-color: var(--cc-error);
      box-shadow: 0 0 0 0.2rem rgba(var(--cc-error), 0.25);
    }
  }
}

// Helper and Error Text for Forms
.helper-text {
  display: block;
  font-size: map-get($font-sizes, "xs");
  color: lighten(var(--cc-neutral-900), 40%); // Muted text color
  margin-top: map-get($spacing-scale, 1); // mt-1
}

.error-text {
  display: block;
  font-size: map-get($font-sizes, "xs");
  color: var(--cc-error);
  margin-top: map-get($spacing-scale, 1); // mt-1
}

// Links
.link {
  color: var(--cc-primary);
  text-decoration: none;
  background-color: transparent;

  &:hover {
    color: var(--cc-primary-hover);
    text-decoration: underline;
  }

  &:focus {
    outline: 2px solid var(--cc-primary); // Accessibility focus ring
    outline-offset: 2px;
  }
}

// Card / Panel
.card {
  background-color: var(--cc-neutral-100);
  border: 1px solid lighten(var(--cc-neutral-900), 80%); // Very light border
  border-radius: map-get($radius-scale, "lg");
  padding: map-get($spacing-scale, 4); // p-4
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06); // Tailwind-like shadow

  // Example: Card Header and Body
  &__header {
    padding-bottom: map-get($spacing-scale, 3); // pb-3
    margin-bottom: map-get($spacing-scale, 3); // mb-3
    border-bottom: 1px solid lighten(var(--cc-neutral-900), 80%);
    font-size: map-get($font-sizes, "lg");
    font-weight: 500;
  }

  &__body {
    // Content here
  }

  &__footer {
    padding-top: map-get($spacing-scale, 3); // pt-3
    margin-top: map-get($spacing-scale, 3); // mt-3
    border-top: 1px solid lighten(var(--cc-neutral-900), 80%);
  }
}
